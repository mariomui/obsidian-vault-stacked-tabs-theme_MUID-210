@use './shared/index.scss' as SHARED;
/* # API specific Feature To ONLY TAKE API BETWEEN = and --- */
/* NAME: SELECTED-TRANSCLUSION-PREVIEW CSS SNIPPET */

.popover.hover-popover {
  .markdown-embed.is-loaded {
    .markdown-preview-view.markdown-rendered {
      .markdown-preview-sizer.markdown-preview-section {
        // [!warning] This code requires the exact filtering cascade to only show elems between two specific h1s (- and =).
        // Dissapear all the divs that follow the h1 - but are not the the = sign.(effectively dissapearing any $elems that aren't - and =)
        div:has(> h1[data-heading="-"]) ~ div:not(:has(h1[data-heading="="])) {
          display: none;
        }
        // Reappear all the divs that follow the = mark but does not contain the --- mark.
        // Effectively reappears the = content as as well as the content under ---
        div:has(> h1[data-heading="="]) ~ div:not(:has(h1[data-heading^="---"])) {
          display: initial;
        }
        // Disspaear the - heading
        div:has(> h1[data-heading="-"]) {
          display: none;
        }
        // Dissapear everything after the --- tag.†
        div:has(> h1[data-heading^='---']) ~ * > * {
          display: none
        }

        // †You'd think that the following works but it doesnt because not everything is a div.
        // div:has(> h1[data-heading^='---']) ~ div {
        //   display: none;
        // }

        // Remove the --- H1
        div:has(> h1[data-heading^='---']) {
          display: none;
        }

        ul.has-list-bullet {
          li:nth-child(even) {
            color: var(--material-color-deep-purple-200);

          }
          li:nth-child(even) {
            > a {
              color: SHARED.$embedPrimaryLinkColor;
            }
          }
        }


      }
    }
  }
}

// .popover.hover-popover .markdown-embed.is-loaded 
// .markdown-preview-view.markdown-rendered 
// .markdown-preview-sizer.markdown-preview-section 
// div:has(> h1[data-heading="="]) ~ div:not(:has(h1[data-heading^="---"])) {
//   display: initial;
// }
// .popover.hover-popover .markdown-embed.is-loaded 
// .markdown-preview-view.markdown-rendered 
// .markdown-preview-sizer.markdown-preview-section 
// div:has(> h1[data-heading="-"]) {
//   display: none;
// }
// .popover.hover-popover .markdown-embed.is-loaded 
// .markdown-preview-view.markdown-rendered 
// .markdown-preview-sizer.markdown-preview-section 
// div:has(> h1[data-heading^='---']) ~ * > * {
//   display: none
// }

// # margin spacing on popover
.popover.hover-popover
.markdown-embed-content
.markdown-preview-view.markdown-rendered {
  .markdown-preview-sizer.markdown-preview-section {
    padding : 0;
  }
}
.popover.hover-popover {
    .markdown-embed-content {
      .markdown-preview-sizer.markdown-preview-section {
        .markdown-rendered h2 {
        border: 1px solid blue;
      }
    }
  }
}

