@use "./shared/index.scss" as shared;

/* # API specific Feature To ONLY TAKE API BETWEEN = and --- */
/* NAME: SELECTED-TRANSCLUSION-PREVIEW CSS SNIPPET */

.popover.hover-popover {

  // dataview padding
  .dataview {
    .markdown-preview-view.markdown-rendered.show-indentation-guide {
      padding: 0;
    }
  }

  .markdown-embed {
    .markdown-preview-view.markdown-rendered {
      .markdown-preview-sizer.markdown-preview-section {
        // [!warning] This code requires the exact filtering cascade to only show elems between two specific h1s (- and =).
        // Dissapear all the divs that follow the h1 - but are not the the = sign.(effectively dissapearing any $elems that aren't - and =)
        div:has(> h1[data-heading="-"]) ~ * {
          display: none;
        }

        // Reappear all the divs that follow the = mark but does not contain the --- mark.
        // Effectively reappears the = content as as well as the content under ---
        div:has(> h1[data-heading="="]) ~ * {
          display: initial;
        }
        // Disspaear the - heading
        > div:has(> h1[data-heading="-"]) {
          display: none;
        }

        // †You'd think that the following works but it doesnt because not everything is a div.
        div:has(> h1[data-heading^="---"]) ~ div {
          display: none;
        }
        // Remove the --- H1 †You'd think that this would work but removing the --- forces refresh.
        // div:has(> h1[data-heading^="---"]) {
        //   display: none;
        // }

        // Rather than removing the element from dom, just toggle the visibility.
        div:has(> h1[data-heading^="---"]) {
          visibility: hidden;
        }

        ul.has-list-bullet {
          li:nth-child(even) {
            color: var(--material-color-deep-purple-200);
          }
          li:nth-child(even) {
            > a {
              color: shared.$embedPrimaryLinkColor;
            }
          }
        }
      }
    }
  }
}

// # margin spacing on popover
.popover.hover-popover
  .markdown-embed-content
  .markdown-preview-view.markdown-rendered {
  .markdown-preview-sizer.markdown-preview-section {
    padding: 0;
  }
}

// .popover.hover-popover
//   > .markdown-embed
//   > .markdown-embed-content
//   > .markdown-preview-view
.popover.hover-popover {
  & > .markdown-embed {
    & > .markdown-emebed-content {
      & > .markdown-preview-view {
        & > .markdown-preview-section {
          background: blue;
        }
      }
    }
  }
}
//   @for $i from 2 through shared.$header-levels {
//     .markdown-embed-content {
//       .markdown-preview-sizer.markdown-preview-section {
//         .markdown-rendered h#{i} {
//           &:before {
//             content: shared.repeat(":", $i - 1) + " ";
//             @include shared.header-indent-position();
//           }
//         }
//       }
//     }
//   }
// }

// # Creating the proper prefixing colons on headings during popover
.popover.hover-popover {
  background-color: shared.$primary;
  @for $i from 2 through shared.$header-levels {
    .markdown-embed-content {
      .markdown-preview-view.markdown-rendered {
        .markdown-preview-sizer.markdown-preview-section {
          h#{$i} {
            background: shared.$primaryAlt;
            padding: 0.5em 0.2em;
            &:before {
              content: shared.repeat(":", $i - 1) + " ";
              @include shared.header-indent-position();
            }
          }
        }
      }
    }
  }
}

// # Create word wrap on code during popover
.popover.hover-popover {
  .markdown-embed.is-loaded {
    .markdown-embed-content {
      .markdown-preview-view {
        pre > code {
          white-space: pre-wrap;
          .ec-line {
            span.indent {
              display: inline-block;
              max-width: 2rem;
              margin: 0;
            }
          }
        }
      }
    }
  }
}
